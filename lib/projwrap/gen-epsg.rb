# Embed EPSG codes inside a .cpp file

# You must extract a list of EPSG codes, which is available inside the proj.4 library,
# in a file called "epsg", in the "nad" directory.
# The last one I used was https://github.com/OSGeo/proj.4.git
# That file has entries in it like this:
#    # TWD67
#    <3821> +proj=longlat +ellps=aust_SA +no_defs  <>
#    # WGS 84 / EPSG Arctic Regional zone B2
#    <5927> +proj=lcc +lat_1=77 +lat_2=69 +lat_0=73.15574086111111 +lon_0=-39 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  <>


# Example: gen-epsg.rb c:\dev\temp\proj.4\nad\epsg

out = File.open("epsg.cpp", "w")

topOut = <<END
#include "pch.h"

// This file is MACHINE GENERATED by gen-epsg.rb

namespace imqs {
namespace projwrap {

END

topBottom = <<END

static int Compare(const int& a, const int& b) {
	return a - b;
}

PROJWRAP_API const char* FindEPSG(int srid) {
	size_t pos = algo::BinarySearch(arraysize(EPSG_SRID), EPSG_SRID, srid, Compare);
	if (pos == -1)
		return nullptr;
	return EPSG_Proj[pos];
}

PROJWRAP_API size_t EPSG_Size() {
	return arraysize(EPSG_SRID);
}

PROJWRAP_API void EPSG_Get(size_t i, int& srid, const char*& proj4) {
	srid = EPSG_SRID[i];
	proj4 = EPSG_Proj[i];
}

} // namespace projwrap
} // namespace imqs
END

out << topOut

all = []

File.open(ARGV[0], "rb") { |f|
	comment = ""
	f.each_line { |line|
		comment = line[1..-1].strip if line[0] == "#"
		if line =~ /<(\d+)>([^<]+)</
			all << {:srid => $1.to_i, :plus => $2.strip}
		end
	}
}

all.sort! {|a,b| a[:srid] <=> b[:srid] }

out << "static int EPSG_SRID[#{all.size}] = {\n"
all.each { |cs| out << "\t#{cs[:srid]},\n" }
out << "};\n"

out << "static const char* EPSG_Proj[#{all.size}] = {\n"
all.each { |cs| out << "\t\"#{cs[:plus]}\", // #{cs[:srid]}\n" }
out << "};\n"

out << topBottom

out.close